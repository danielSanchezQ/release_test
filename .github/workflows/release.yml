on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10


name: Release

jobs:
  initial_release:
    name: Create base release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  release_assets:
    name: Release assets
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        # Linux
        - {os: ubuntu-latest, target: arm-unknown-linux-gnueabi}
        - {os: ubuntu-latest, target: armv7-unknown-linux-gnueabihf}
        - {os: ubuntu-latest, target: mips64el-unknown-linux-gnuabi64}
        - {os: ubuntu-latest, target: powerpc64le-unknown-linux-gnu}
        - {os: ubuntu-latest, target: x86_64-unknown-linux-musl}
        - {os: ubuntu-latest, target: aarch64-linux-android}
#        # Macos
#        - {os: macos-latest, target: x86_64-unknown-linux-gnu}
#        - {os: macos-latest, target: aarch64-unknown-linux-gnu}
#        - {os: macos-latest, target: x86_64-apple-darwin}
        # Windows
        - {os: windows-latest, target: x86_64-pc-windows-gnu}
        - {os: windows-latest, target: x86_64-pc-windows-msvc}
        toolchain: [stable]
#        include:
#          - conifg.os: ubuntu-latest
#            target: arm-unknown-linux-gnueabi
##            target: [
##              arm-unknown-linux-gnueabi,
##              armv7-unknown-linux-gnueabihf,
##              mips64el-unknown-linux-gnuabi64,
##              powerpc64le-unknown-linux-gnu,
##              x86_64-unknown-linux-musl,
##            ]
#            env:
#              DISABLE_TESTS: 1
#
#          - config.os: macos-latest
#            target: aarch64-unknown-linux-gnu
#            env:
#              DISABLE_TESTS: 1

    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.config.target }}
          override: true
          default: true

      - name: Checkout code
        uses: actions/checkout@master

      - name: Build project
        uses: actions-rs/cargo@v1
        with:
          command: rustc
          args: --release -p release_test --bin release_test -- -C lto
#        env:
#          RUSTFLAGS: -C lto
#        with:
#          command: build --release -p release_test --bin release_test

#        cargo rustc --target ${{ matrix.target }} --release -p jormungandr --bin jormungandr -- -C lto,
#        cargo rustc --target ${{ matrix.target }} --release -p jcli        --bin jcli        -- -C lto

      - name: Pack asset
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip --junk-paths release_test-${{ github.ref }}-${{ matrix.config.target }}.zip ./target/release/release_test
        #run: zip --junk-paths jormungandr-${{ github.ref }}-${{ matrix.target }}.zip ./target/release/jormungandr ./target/release/jcli

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./release_test-${{ github.ref }}-${{ matrix.config.target }}.zip
          asset_name: release_test-${{ github.ref }}-${{ matrix.config.target }}.zip
          asset_content_type: application/zip
